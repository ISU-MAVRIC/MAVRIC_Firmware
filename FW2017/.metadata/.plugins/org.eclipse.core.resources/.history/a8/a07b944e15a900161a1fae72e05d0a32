//*****************************************************************************
//
// MSP432 main.c template - Empty main
//
//****************************************************************************

#include "msp.h"

#include "clocks.h"
#include "uart.hpp"
#include "ProtocolData.h"
#include "Protocol.hpp"
#include "TimerPWM_Servo.hpp"
#include "timer.hpp"

void main(void) {

	WDTCTL = WDTPW | WDTHOLD;           // Stop watchdog timer
	//<left right # # # # # # # # # # # # #>
	//Peripherials::UART uart(*EUSCI_A1, 9600, txQueue);

	P2->DIR |= 7;

	P3->SEL0 |= 0x0C;
//	P3->DIR |= 0x08;

	P8->OUT |= 4;
	P8->DIR |= 4;
	P8->SEL0 |= 4;


	//EUSCI_A1->STATW |= UCLISTEN;

	NVIC_EnableIRQ(EUSCIA2_IRQn);

	Incoming packet;
	packet.header.raw = 0;
	packet.header.ding = 1;

	internal_servo_cal_point low = { -90, 0.001 };
	internal_servo_cal_point high = { 90, 0.002 };

	Servo& Left = *new InternalServoControl(Peripherials::TA3,
			Peripherials::CC1, low, high);
	Servo& Right = *new InternalServoControl(Peripherials::TA3,
			Peripherials::CC2, low, high);

	Left.Resume();
	Right.Resume();


	Peripherials::UART& RFD900 = Peripherials::UART_A2;

	while (1) {
		int count = 0;
		while ((count = RFD900.GetBufferLength()) == 0
				&& RFD900.GetBuffer().GetData()[count - 1] != '<')
			;
		while (RFD900.GetBufferLength() == count)
			;
		signed char left = RFD900.GetBuffer().GetData()[count];
		while (RFD900.GetBufferLength() == count + 1)
			;
		signed char right = RFD900.GetBuffer().GetData()[count + 1];
		RFD900.ClearBuffer();
		Left.GoToAngle(left);
		Right.GoToAngle(right);
	}
	while (1)
		;
}
