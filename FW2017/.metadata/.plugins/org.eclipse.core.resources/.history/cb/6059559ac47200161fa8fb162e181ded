//*****************************************************************************
//
// MSP432 main.c template - Empty main
//
//****************************************************************************

#include "msp.h"

#include "timer.hpp"

using namespace Peripherials;

void ToggleRed()
{
	P2->OUT ^= (1 << 0);
}

void main(void) {

	WDTCTL = WDTPW | WDTHOLD;           // Stop watchdog timer

	P2->DIR = (1 << 4) | (1 << 0);
	P2->SEL0 = 1 << 4;
	P2->OUT = 0;
	TA0.AttachOverflowInterrupt(ToggleRed);
	TA0.AttachInterrupt(CC0, ToggleRed);
	TA0.AttachInterrupt(CC1, ToggleRed);
	__enable_irq();
	TA0.SetPeriod((float) 20.0 / 100);
	float ledTime;
	TA0.StartPWM(CC1, (float)0);
	while (true) {
		for (ledTime = 0; ledTime < 20; ledTime += .1) {
			TA0.SetPWM(CC1, ledTime / 100);
			__delay_cycles(4800000);
		}
		for (ledTime = 20; ledTime > 0; ledTime -= .1) {
			TA0.SetPWM(CC1, ledTime / 100);
			__delay_cycles(4800000);
		}
	}
}
