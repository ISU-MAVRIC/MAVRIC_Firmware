//*****************************************************************************
//
// MSP432 main.c template - Empty main
//
//****************************************************************************

#include "msp.h"

#include "timer.hpp"
#include "TimerPWM_Servo.hpp"

using namespace Peripherials;

void ClearRed() {
	P2->OUT &= ~1;
}

void SetRed() {
	P2->OUT |= 1;
}

void ToggleGreen() {
	P2->OUT ^= 2;
}
#define scale 1000

void main(void) {

	WDTCTL = WDTPW | WDTHOLD;           // Stop watchdog timer

	P2->DIR = 0xFF;
	P2->SEL0 = 1 << 4;
	P2->OUT = 0;
	struct internal_servo_cal_point low;
	low.angle = 0;
	low.period = 0;
	struct internal_servo_cal_point high;
	high.angle = 100;
	high.period = 0.020;

	InternalServoControl servo = InternalServoControl(TA0, CC1, low, high);

	int i;
	while (true) {
		for (i = 0; i < 100; i++) {
			servo.GoToAngle(i);
			__delay_cycles(480000);
		}
		for (i = 100; i > 0; i--) {
			servo.GoToAngle(i);
			__delay_cycles(480000);
		}
	}
}
