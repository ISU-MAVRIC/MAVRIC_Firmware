/*
 * TimerPWM_Servo.cpp
 *
 *  Created on: Sep 6, 2016
 *      Author: James
 */

#include "TimerPWM_Servo.hpp"

InternalServoControl::InternalServoControl(Peripherials::Timer& timer,
		Peripherials::TimerCapComUnit unit) :
		angle(0), _timer(timer), module(unit), period_90_deg(.0005f), period_minus_90_deg(
				.0025f) {
	// 20 ms
	_timer.SetPeriod(0.020f);
	_timer.StartPWM(module, 0.0015f);
	Suspend();
}

InternalServoControl::InternalServoControl(Peripherials::Timer& timer,
		Peripherials::TimerCapComUnit unit, struct cal_point low, struct cal_point high) :
		angle(0), _timer(timer), module(unit) {
	// 20 ms
	_timer.SetPeriod(0.020f);
	_timer.StartPWM(module, 0.0015f);
	Suspend();
}

/*
 * Disables the control signal to the servo
 */
void InternalServoControl::Suspend() {
	_timer.DisablePWM(module);
}
/*
 * Enables the control signal to the servo.
 */
void InternalServoControl::Resume() {
	_timer.EnablePWM(module);
}
/*
 * Sets the control to the angle given
 */
void InternalServoControl::GoToAngle(float angle) {
	_timer.SetPWM( + ());
}
/*
 * Alias for GoToAngle(0);
 */
void Center();
