//*****************************************************************************
//
// MSP432 main.c template - Empty main
//
//****************************************************************************

#include "msp.h"

#include "clocks.h"
#include "uart.hpp"
#include "ProtocolData.h"
#include "Protocol.hpp"

void main(void) {

	WDTCTL = WDTPW | WDTHOLD;           // Stop watchdog timer

	//Peripherials::UART uart(*EUSCI_A1, 9600, txQueue);

	P2->DIR = 1 << 3;
	P2->SEL0 = 1 << 3;

	P2->DIR |= 7;

	EUSCI_A1->STATW |= UCLISTEN;

	NVIC_EnableIRQ(EUSCIA1_IRQn);

	Incoming packet;
	packet.header.ding = 1;
	packet.header.mastCamera = 0;
	packet.header.wheels = 0;
	packet.header.modulePower = 0;
	packet.header.soilControl = 0;

	while (1) {
		Peripherials::UART_A1.ClearBuffer();
		Peripherials::UART_A1.Send(packet.header.raw);

		char received = Peripherials::UART_A1.GetBuffer().GetData()[0];
		if (received) {
			P2->OUT |= 7;
		} else {
			P2->OUT &= ~7;
		}
		__delay_cycles(fMCLK);

		Peripherials::UART_A1.ClearBuffer();
		Peripherials::UART_A1.Send(packet.header.raw);

		received = Peripherials::UART_A1.GetBuffer().GetData()[0];
		if (received) {
			P2->OUT |= 7;
		} else {
			P2->OUT &= ~7;
		}
		__delay_cycles(fMCLK);
	}

	__delay_cycles(fSMCLK / 100);

	while (true) {
		Peripherials::UART_A1.Send("Hello World, I am a MSP432 uP.");
		__delay_cycles(fMCLK * 30 * (11) / 9600);

		if (Peripherials::UART_A1.GetBufferLength() == 30) {
			P2->OUT |= 7;
		} else {
			P2->OUT &= ~7;
		}
		for (int i = 0; i < Peripherials::UART_A1.GetBufferLength(); i++) {
			Peripherials::UART_A3.Send(
					Peripherials::UART_A1.GetBuffer().GetData()[i]);
		}
		Peripherials::UART_A1.ClearBuffer();
	}
}
