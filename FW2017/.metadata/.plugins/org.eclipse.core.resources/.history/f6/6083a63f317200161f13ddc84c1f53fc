/*
 * timer.cpp
 *
 *  Created on: Sep 3, 2016
 *      Author: James
 */

#include "timer.hpp"
#include "msp.h"

// Assumption - change if the source changes
#define ACLK 32768

namespace Peripherials
{
	Timer TA0(TIMER_A0, ACLK), TA1(TIMER_A1, ACLK), TA2(TIMER_A2, ACLK), TA3(TIMER_A3, ACLK);

	Timer::Timer(Timer_A_Type* instance, TimerClockSource source) : regs(*instance)
	{
		regs.CTL = (source & (3 << 8)) | (TACLR);
	}

	void Timer::SetPWM(float period, float pulseWidth)
	{

	}
}
