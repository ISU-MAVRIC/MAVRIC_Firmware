/*
 * TimerPWM_Servo.cpp
 *
 *  Created on: Sep 6, 2016
 *      Author: James
 */

#ifndef TIMER_PWM_SERVO_HPP_
#define TIMER_PWM_SERVO_HPP_

#include "Servo.hpp"
#include "Timer.hpp"

//using namespace Peripherials;

class InternalServoControl: Servo {
private:
	Peripherials::Timer& _timer;
	Peripherials::TimerCapComUnit module;
	float angle;

	struct cal_point
	{
		float period, angle;
	} calibration[2];

public:
	/*
	 * Creates a Servo that is controlled by the given timer compare module
	 */
	InternalServoControl(Peripherials::Timer& timer,
			Peripherials::TimerCapComUnit unit, struct cal_point low, struct cal_point high);
	/*
	 * Disables the control signal to the servo
	 */
	virtual void Suspend();
	/*
	 * Enables the control signal to the servo.
	 */
	virtual void Resume();
	/*
	 * Sets the control to the angle given
	 */
	virtual void GoToAngle(float angle);
	/*
	 * Alias for GoToAngle(0);
	 */
	virtual void Center();
};

#endif

